DCCRN_ARCHITECTURES = {
    "DCCRN-CL": (
        # Encoders:
        # (in_chan, out_chan, kernel_size, stride, padding)
        (
            (  1,  16, (5, 2), (2, 1), (2, 0)),
            ( 16,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  64, (5, 2), (2, 1), (2, 0)),
            ( 64, 128, (5, 2), (2, 1), (2, 0)),
            (128, 128, (5, 2), (2, 1), (2, 0)),
            (128, 128, (5, 2), (2, 1), (2, 0)),
        ),
        # Decoders:
        # (in_chan, out_chan, kernel_size, stride, padding, output_padding)
        (
            (256, 128, (5, 2), (2, 1), (2, 0), (1, 0)),
            (256, 128, (5, 2), (2, 1), (2, 0), (1, 0)),
            (256,  64, (5, 2), (2, 1), (2, 0), (1, 0)),
            (128,  32, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 64,  16, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 32,   1, (5, 2), (2, 1), (2, 0), (1, 0)),
        ),
    ),
    # 3.0M
    "DCCRN-CL-3M": (
        # Encoders:
        # (in_chan, out_chan, kernel_size, stride, padding)
        (
            (  1,  16, (5, 2), (2, 1), (2, 0)),
            ( 16,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  64, (5, 2), (2, 1), (2, 0)),
            ( 64,  66, (5, 2), (2, 1), (2, 0)),
            ( 66, 128, (5, 2), (2, 1), (2, 0)),
            (128, 128, (5, 2), (2, 1), (2, 0)),
        ),
        # Decoders:
        # (in_chan, out_chan, kernel_size, stride, padding, output_padding)
        (
            (256, 128, (5, 2), (2, 1), (2, 0), (1, 0)),
            (256,  66, (5, 2), (2, 1), (2, 0), (1, 0)),
            (132,  64, (5, 2), (2, 1), (2, 0), (1, 0)),
            (128,  32, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 64,  16, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 32,   1, (5, 2), (2, 1), (2, 0), (1, 0)),
        ),
    ),
    # 2.0M
    "DCCRN-CL-2M": (
        # Encoders:
        # (in_chan, out_chan, kernel_size, stride, padding)
        (
            (  1,   8, (5, 2), (2, 1), (2, 0)),
            (  8,  16, (5, 2), (2, 1), (2, 0)),
            ( 16,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  64, (5, 2), (2, 1), (2, 0)),
            ( 64,  64, (5, 2), (2, 1), (2, 0)),
            ( 64, 128, (5, 2), (2, 1), (2, 0)),
        ),
        # Decoders:
        # (in_chan, out_chan, kernel_size, stride, padding, output_padding)
        (
            (256,  64, (5, 2), (2, 1), (2, 0), (1, 0)),
            (128,  64, (5, 2), (2, 1), (2, 0), (1, 0)),            
            (128,  32, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 64,  16, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 32,   8, (5, 2), (2, 1), (2, 0), (1, 0)),            
            ( 16,   1, (5, 2), (2, 1), (2, 0), (1, 0)),
        ),
    ),
    # 1.0M
    "DCCRN-CL-1M": (
        # Encoders:
        # (in_chan, out_chan, kernel_size, stride, padding)
        (
            (  1,   8, (5, 2), (2, 1), (2, 0)),
            (  8,  16, (5, 2), (2, 1), (2, 0)),
            ( 16,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  32, (5, 2), (2, 1), (2, 0)),
            ( 32,  64, (5, 2), (2, 1), (2, 0)),
        ),
        # Decoders:
        # (in_chan, out_chan, kernel_size, stride, padding, output_padding)
        (
            (128,  32, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 64,  32, (5, 2), (2, 1), (2, 0), (1, 0)),            
            ( 64,  32, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 64,  16, (5, 2), (2, 1), (2, 0), (1, 0)),
            ( 32,   8, (5, 2), (2, 1), (2, 0), (1, 0)),            
            ( 16,   1, (5, 2), (2, 1), (2, 0), (1, 0)),
        ),
    )
}